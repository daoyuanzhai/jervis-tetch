services:
  rabbitmq:
    image: rabbitmq:management
    restart: always
    container_name: rabbitmq
    hostname: rabbit-hostname
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./volumes/rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    hostname: qdrant-hostname
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./volumes/qdrant_data:/qdrant_data

  mysql:
    image: mysql:8.3.0
    restart: always
    container_name: mysql
    hostname: mysql-hostname
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./volumes/mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  jervis:  # Define your application service here
    image: jervis-tetch:0.01  # Use the image you built
    ports:
      - "3000:3000"  # Assuming your app runs on port 3000
    depends_on:
      - rabbitmq  # Ensures RabbitMQ starts before your app
    environment:
      - RABBITMQ_HOST=my-rabbit  # Assuming your app expects this environment variable

configs:
  qdrant_config:
    content: |
      log_level: INFO